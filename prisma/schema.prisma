// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  nome       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("user")
}

model Client {
  id              String     @id @default(uuid())
  nome            String
  telefone        String
  data_nascimento String
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
  Location        Location[]

  @@map("client")
}

model Director {
  id             String           @id @default(uuid())
  nome           String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  directorMovies directorMovies[]

  @@map("director")
}

model Actor {
  id          String        @id @default(uuid())
  nome        String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  actorMovies actorMovies[]

  @@map("actor")
}

model directorMovies {
  id          String   @id @default(uuid())
  id_director String
  director    Director @relation(fields: [id_director], references: [id])
  id_movie    String
  movie       Movie    @relation(fields: [id_movie], references: [id])

  @@map("director_movies")
}

model actorMovies {
  id       String @id @default(uuid())
  id_actor String
  actor    Actor  @relation(fields: [id_actor], references: [id])
  id_movie String
  movie    Movie  @relation(fields: [id_movie], references: [id])

  @@map("actor_movies")
}

model Movie {
  id                     String           @id @default(uuid())
  titulo                 String
  ano_lancamento         String
  imagem                 String?
  sinopse                String
  elenco                 String
  categoria              String
  valor_locacao          String
  qtd_copias_disponiveis String
  created_at             DateTime         @default(now())
  updated_at             DateTime         @updatedAt
  Location               Location[]
  directorMovies         directorMovies[]
  actorMovies            actorMovies[]

  @@map("movie")
}

model Location {
  id                    String   @id @default(uuid())
  id_client             String
  id_movie              String
  data_retirada         DateTime @default(now())
  data_devolucao        DateTime
  hora_limite_devolucao String
  multa_atraso          String
  valor_total           String
  client                Client   @relation(fields: [id_client], references: [id])
  movie                 Movie    @relation(fields: [id_movie], references: [id])
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  @@map("location")
}

enum Situation {
  REGULAR
  ATRASADO
  ENTREGUE
}
